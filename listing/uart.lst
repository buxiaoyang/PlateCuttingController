C51 COMPILER V7.50   UART                                                                  05/29/2014 22:32:43 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\output\uart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE source\uart.c LARGE BROWSE INCDIR(.\include\) DEBUG OBJECTEXTEND PRINT(.\li
                    -sting\uart.lst) OBJECT(.\output\uart.obj)

line level    source

   1          #include <uart.h>
   2          #include <reg52.h>
   3          #include <intrins.h>
   4          #include <parameter.h>
   5          
   6          
   7          #define FOSC 11059200L      //System frequency
   8          #define BAUD 115200         //UART baudrate
   9          
  10          /*Define UART parity mode*/
  11          #define NONE_PARITY     0   //None parity
  12          #define ODD_PARITY      1   //Odd parity
  13          #define EVEN_PARITY     2   //Even parity
  14          #define MARK_PARITY     3   //Mark parity
  15          #define SPACE_PARITY    4   //Space parity
  16          
  17          #define PARITYBIT NONE_PARITY   //Testing even parity
  18          
  19          /*Declare SFR associated with the UART2 */
  20          sfr AUXR  = 0x8e;           //Auxiliary register
  21          sfr S2CON = 0x9a;           //UART2 control register
  22          sfr S2BUF = 0x9b;           //UART2 data buffer
  23          sfr BRT   = 0x9c;           //Baudrate generator
  24          sfr IE2   = 0xaf;           //Interrupt control 2
  25          
  26          #define S2RI  0x01          //S2CON.0
  27          #define S2TI  0x02          //S2CON.1
  28          #define S2RB8 0x04          //S2CON.2
  29          #define S2TB8 0x08          //S2CON.3
  30          
  31          bit busy;
  32          bit uartReceiveOK = 0;
  33          
  34          BYTE uartBuffer[15] = {0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
  35          
  36          BYTE receiveSteps = 0;  // 0: 没有数据接收
  37                                                          // 1: 接收到5A
  38                                                          // 2：接收到A5
  39                                                          // 3：接收到数据长度
  40                                                          // 4: 接收数据
  41                                                          // 5：确定指令动作
  42          BYTE dataIndex = 0;
  43          BYTE dataLength = 0;
  44            
  45          void SendData(BYTE dat);
  46          void SendString(char *s);
  47          void ReceiveData(BYTE dat);
  48          void anyData();
  49          
  50          void uart_init()
  51          {
  52   1      #if (PARITYBIT == NONE_PARITY)
  53   1          S2CON = 0x50;           //8-bit variable UART
  54   1      #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
C51 COMPILER V7.50   UART                                                                  05/29/2014 22:32:43 PAGE 2   

                  S2CON = 0xda;           //9-bit variable UART, parity bit initial to 1
              #elif (PARITYBIT == SPACE_PARITY)
                  S2CON = 0xd2;           //9-bit variable UART, parity bit initial to 0
              #endif
  59   1      
  60   1          BRT = -(FOSC/32/BAUD);  //Set auto-reload vaule of baudrate generator
  61   1          AUXR = 0x14;            //Baudrate generator work in 1T mode
  62   1          IE2 = 0x01;             //Enable UART2 interrupt
  63   1          EA = 1;                 //Open master interrupt switch
  64   1      
  65   1          //SendString("STC12C5A60S2\r\nUart2 Test !\r\n");
  66   1          //while(1);
  67   1      }
  68          
  69          /*----------------------------
  70          UART2 interrupt service routine
  71          ----------------------------*/
  72          void Uart2() interrupt 8 using 1
  73          {
  74   1          if (S2CON & S2RI)
  75   1          {
  76   2              S2CON &= ~S2RI;     //Clear receive interrupt flag
  77   2              ReceiveData(S2BUF);
  78   2                      //P0 = S2BUF;         //P0 show UART data
  79   2              //P2 = (S2CON & S2RB8);//P2.2 show parity bit
  80   2          }
  81   1          if (S2CON & S2TI)
  82   1          {
  83   2              S2CON &= ~S2TI;     //Clear transmit interrupt flag
  84   2              busy = 0;           //Clear transmit busy flag
  85   2          }
  86   1      }
  87          
  88          /*----------------------------
  89          Send a byte data to UART
  90          Input: dat (data to be sent)
  91          Output:None
  92          ----------------------------*/
  93          void SendData(BYTE dat)
  94          {
  95   1          while (busy);           //Wait for the completion of the previous data is sent
  96   1          ACC = dat;              //Calculate the even parity bit P (PSW.0)
  97   1          if (P)                  //Set the parity bit according to P
  98   1          {
  99   2      #if (PARITYBIT == ODD_PARITY)
                      S2CON &= ~S2TB8;    //Set parity bit to 0
              #elif (PARITYBIT == EVEN_PARITY)
                      S2CON |= S2TB8;     //Set parity bit to 1
              #endif
 104   2          }
 105   1          else
 106   1          {
 107   2      #if (PARITYBIT == ODD_PARITY)
                      S2CON |= S2TB8;     //Set parity bit to 1
              #elif (PARITYBIT == EVEN_PARITY)
                      S2CON &= ~S2TB8;    //Set parity bit to 0
              #endif
 112   2          }
 113   1          busy = 1;
 114   1          S2BUF = ACC;            //Send data to UART2 buffer
 115   1      }
 116          
C51 COMPILER V7.50   UART                                                                  05/29/2014 22:32:43 PAGE 3   

 117          /*----------------------------
 118          Send a string to UART
 119          Input: s (address of string)
 120          Output:None
 121          ----------------------------*/
 122          void SendString(char *s)
 123          {
 124   1          while (*s)              //Check the end of the string
 125   1          {
 126   2              SendData(*s++);     //Send current char and increment string ptr
 127   2          }
 128   1      }
 129          
 130          void SendDataToScreen(WORD address, WORD dat)
 131          {
 132   1              SendData(0x5A);
 133   1              SendData(0xA5);
 134   1              SendData(0x05);
 135   1              SendData(0x82);
 136   1              SendData(address>>8);
 137   1              SendData(address);
 138   1              SendData(dat>>8);
 139   1              SendData(dat);
 140   1      }
 141          
 142          void ReceiveData(BYTE dat)
 143          {
 144   1              // 0: 接收到5A
 145   1              // 1：接收到A5
 146   1              // 2：接收到数据长度
 147   1              // 3: 接收数据
 148   1              // 4：确定指令动作
 149   1              switch(receiveSteps)
 150   1              {
 151   2                      case 0:
 152   2                              if(dat == 0x5A)
 153   2                              {
 154   3                                      receiveSteps ++;
 155   3                              }
 156   2                      break;
 157   2                      case 1:
 158   2                              if(dat == 0xA5)
 159   2                              {
 160   3                                      receiveSteps ++;
 161   3                              }
 162   2                              else
 163   2                              {
 164   3                                      receiveSteps = 0;
 165   3                              }
 166   2                      break;
 167   2                      case 2:
 168   2                              dataLength = dat;
 169   2                              dataIndex = 0;
 170   2                              receiveSteps ++;
 171   2                      break;
 172   2                      case 3:
 173   2                              uartBuffer[dataIndex] = dat;
 174   2                              dataIndex ++;
 175   2                              if(dataIndex >= dataLength)
 176   2                              {
 177   3                                      anyData();
 178   3                                      receiveSteps = 0;
C51 COMPILER V7.50   UART                                                                  05/29/2014 22:32:43 PAGE 4   

 179   3                              }
 180   2                      break;
 181   2                      default:
 182   2                              _nop_();
 183   2                              receiveSteps = 0;
 184   2              }
 185   1      }
 186          
 187          void anyData()
 188          {
 189   1              WORD dat = ((uartBuffer[4]<<8) | uartBuffer[5]);
 190   1              if(uartBuffer[2] == 0x01)               //系统参数1
 191   1              {
 192   2                      sysParm1_SignalNumPerMeter = dat;
 193   2                      maxSignalNum = (65535 * sysParm1_SignalNumPerMeter)/1000-2000;
 194   2              }
 195   1              else if(uartBuffer[2] == 0x03)  //系统参数2
 196   1              {
 197   2                      sysParm2_ErrorCorrectionValue = dat;
 198   2              }
 199   1              else if(uartBuffer[2] == 0x05)  //系统参数3
 200   1              {
 201   2                      sysParm3 = dat;
 202   2              }
 203   1              else if(uartBuffer[2] == 0x07)  //系统参数4
 204   1              {
 205   2                      sysParm4 = dat;
 206   2              }
 207   1              else if(uartBuffer[2] == 0x09)  //系统参数5
 208   1              {
 209   2                      sysParm5 = dat; 
 210   2              }
 211   1              else if(uartBuffer[2] == 0x0B)  //板材参数_板长1
 212   1              {
 213   2                      parameterBoard[0].boardLength = dat;
 214   2              }
 215   1              else if(uartBuffer[2] == 0x0D)  //板材参数_块数1        
 216   1              {
 217   2                      parameterBoard[0].boardNumber = dat;
 218   2              }
 219   1              else if(uartBuffer[2] == 0x0F)  //板材参数_板长2
 220   1              {
 221   2                      parameterBoard[1].boardLength = dat;
 222   2              }
 223   1              else if(uartBuffer[2] == 0x11)  //板材参数_块数2
 224   1              {
 225   2                      parameterBoard[1].boardNumber = dat;
 226   2              }
 227   1              else if(uartBuffer[2] == 0x13)  //板材参数_板长3
 228   1              {
 229   2                      parameterBoard[2].boardLength = dat;
 230   2              }
 231   1              else if(uartBuffer[2] == 0x15)  //板材参数_块数3
 232   1              {
 233   2                      parameterBoard[2].boardNumber = dat;
 234   2              }
 235   1              else if(uartBuffer[2] == 0x17)  //板材参数_板长4
 236   1              {
 237   2                      parameterBoard[3].boardLength = dat;
 238   2              }
 239   1              else if(uartBuffer[2] == 0x19)  //板材参数_块数4
 240   1              {
C51 COMPILER V7.50   UART                                                                  05/29/2014 22:32:43 PAGE 5   

 241   2                      parameterBoard[3].boardNumber = dat;
 242   2              }
 243   1              else if(uartBuffer[2] == 0x23)  //手动操作_前进
 244   1              {
 245   2      
 246   2              }
 247   1              else if(uartBuffer[2] == 0x24)  //手动操作_后退
 248   1              {
 249   2                      
 250   2              }
 251   1              else if(uartBuffer[2] == 0x25)  //手动操作_慢进
 252   1              {
 253   2                      
 254   2              }
 255   1              else if(uartBuffer[2] == 0x26)  //手动操作_切断上
 256   1              {
 257   2                      
 258   2              }
 259   1              else if(uartBuffer[2] == 0x27)  //手动操作_切断下
 260   1              {
 261   2                      
 262   2              }
 263   1              else if(uartBuffer[2] == 0x28)  //运行画面_复位按钮
 264   1              {
 265   2                      
 266   2              }
 267   1              uartReceiveOK = 1;      
 268   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    580    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     18       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
