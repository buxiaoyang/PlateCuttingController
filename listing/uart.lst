C51 COMPILER V7.50   UART                                                                  10/10/2014 20:44:24 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\output\uart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE source\uart.c LARGE BROWSE INCDIR(.\include\) DEBUG OBJECTEXTEND PRINT(.\li
                    -sting\uart.lst) OBJECT(.\output\uart.obj)

line level    source

   1          #include <uart.h>
   2          #include <reg52.h>
   3          #include <intrins.h>
   4          #include <parameter.h>
   5          #include <dispatch.h>
   6          
   7          #define FOSC 11059200L      //System frequency
   8          #define BAUD 115200         //UART baudrate
   9          
  10          /*Define UART parity mode*/
  11          #define NONE_PARITY     0   //None parity
  12          #define ODD_PARITY      1   //Odd parity
  13          #define EVEN_PARITY     2   //Even parity
  14          #define MARK_PARITY     3   //Mark parity
  15          #define SPACE_PARITY    4   //Space parity
  16          
  17          #define PARITYBIT NONE_PARITY   //Testing even parity
  18          
  19          /*Declare SFR associated with the UART2 */
  20          sfr AUXR  = 0x8e;           //Auxiliary register
  21          sfr S2CON = 0x9a;           //UART2 control register
  22          sfr S2BUF = 0x9b;           //UART2 data buffer
  23          sfr BRT   = 0x9c;           //Baudrate generator
  24          sfr IE2   = 0xaf;           //Interrupt control 2
  25          
  26          #define S2RI  0x01          //S2CON.0
  27          #define S2TI  0x02          //S2CON.1
  28          #define S2RB8 0x04          //S2CON.2
  29          #define S2TB8 0x08          //S2CON.3
  30          
  31          bit busy;
  32          bit freshDiaplay = 0;
  33          bit saveSetting = 0;
  34          
  35          BYTE manualOperation = 0; //1, 前进  2，后退 3，慢进  4，切断上  5，切断下
  36          
  37          BYTE uartBuffer[15] = {0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
  38          
  39          BYTE receiveSteps = 0;  // 0: 没有数据接收
  40                                                          // 1: 接收到5A
  41                                                          // 2：接收到A5
  42                                                          // 3：接收到数据长度
  43                                                          // 4: 接收数据
  44                                                          // 5：确定指令动作
  45          BYTE dataIndex = 0;
  46          BYTE dataLength = 0;
  47            
  48          void SendData(BYTE dat);
  49          void SendString(char *s);
  50          void ReceiveData(BYTE dat);
  51          void anyData();
  52          
  53          void uart_init()
  54          {
C51 COMPILER V7.50   UART                                                                  10/10/2014 20:44:24 PAGE 2   

  55   1      #if (PARITYBIT == NONE_PARITY)
  56   1          S2CON = 0x50;           //8-bit variable UART
  57   1      #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                  S2CON = 0xda;           //9-bit variable UART, parity bit initial to 1
              #elif (PARITYBIT == SPACE_PARITY)
                  S2CON = 0xd2;           //9-bit variable UART, parity bit initial to 0
              #endif
  62   1      
  63   1          BRT = -(FOSC/32/BAUD);  //Set auto-reload vaule of baudrate generator
  64   1          AUXR |= 0x14;            //Baudrate generator work in 1T mode
  65   1          IE2 = 0x01;             //Enable UART2 interrupt
  66   1          EA = 1;                 //Open master interrupt switch
  67   1      
  68   1          //SendString("STC12C5A60S2\r\nUart2 Test !\r\n");
  69   1          //while(1);
  70   1      }
  71          
  72          /*----------------------------
  73          UART2 interrupt service routine
  74          ----------------------------*/
  75          void Uart2() interrupt 8 using 1
  76          {
  77   1          if (S2CON & S2RI)
  78   1          {
  79   2              S2CON &= ~S2RI;     //Clear receive interrupt flag
  80   2              ReceiveData(S2BUF);
  81   2                      //P0 = S2BUF;         //P0 show UART data
  82   2              //P2 = (S2CON & S2RB8);//P2.2 show parity bit
  83   2          }
  84   1          if (S2CON & S2TI)
  85   1          {
  86   2              S2CON &= ~S2TI;     //Clear transmit interrupt flag
  87   2              busy = 0;           //Clear transmit busy flag
  88   2          }
  89   1      }
  90          
  91          /*----------------------------
  92          Send a byte data to UART
  93          Input: dat (data to be sent)
  94          Output:None
  95          ----------------------------*/
  96          void SendData(BYTE dat)
  97          {
  98   1          while (busy);           //Wait for the completion of the previous data is sent
  99   1          ACC = dat;              //Calculate the even parity bit P (PSW.0)
 100   1          if (P)                  //Set the parity bit according to P
 101   1          {
 102   2      #if (PARITYBIT == ODD_PARITY)
                      S2CON &= ~S2TB8;    //Set parity bit to 0
              #elif (PARITYBIT == EVEN_PARITY)
                      S2CON |= S2TB8;     //Set parity bit to 1
              #endif
 107   2          }
 108   1          else
 109   1          {
 110   2      #if (PARITYBIT == ODD_PARITY)
                      S2CON |= S2TB8;     //Set parity bit to 1
              #elif (PARITYBIT == EVEN_PARITY)
                      S2CON &= ~S2TB8;    //Set parity bit to 0
              #endif
 115   2          }
 116   1          busy = 1;
C51 COMPILER V7.50   UART                                                                  10/10/2014 20:44:24 PAGE 3   

 117   1          S2BUF = ACC;            //Send data to UART2 buffer
 118   1      }
 119          
 120          /*----------------------------
 121          Send a string to UART
 122          Input: s (address of string)
 123          Output:None
 124          ----------------------------*/
 125          void SendString(char *s)
 126          {
 127   1          while (*s)              //Check the end of the string
 128   1          {
 129   2              SendData(*s++);     //Send current char and increment string ptr
 130   2          }
 131   1      }
 132          
 133          void SendDataToScreen(WORD address, WORD dat)
 134          {
 135   1              SendData(0x5A);
 136   1              SendData(0xA5);
 137   1              SendData(0x05);
 138   1              SendData(0x82);
 139   1              SendData(address>>8);
 140   1              SendData(address);
 141   1              SendData(dat>>8);
 142   1              SendData(dat);
 143   1      }
 144          
 145          void ReceiveData(BYTE dat)
 146          {
 147   1              // 0: 接收到5A
 148   1              // 1：接收到A5
 149   1              // 2：接收到数据长度
 150   1              // 3: 接收数据
 151   1              // 4：确定指令动作
 152   1              switch(receiveSteps)
 153   1              {
 154   2                      case 0:
 155   2                              if(dat == 0x5A)
 156   2                              {
 157   3                                      receiveSteps ++;
 158   3                              }
 159   2                      break;
 160   2                      case 1:
 161   2                              if(dat == 0xA5)
 162   2                              {
 163   3                                      receiveSteps ++;
 164   3                              }
 165   2                              else
 166   2                              {
 167   3                                      receiveSteps = 0;
 168   3                              }
 169   2                      break;
 170   2                      case 2:
 171   2                              dataLength = dat;
 172   2                              dataIndex = 0;
 173   2                              receiveSteps ++;
 174   2                      break;
 175   2                      case 3:
 176   2                              uartBuffer[dataIndex] = dat;
 177   2                              dataIndex ++;
 178   2                              if(dataIndex >= dataLength)
C51 COMPILER V7.50   UART                                                                  10/10/2014 20:44:24 PAGE 4   

 179   2                              {
 180   3                                      anyData();
 181   3                                      receiveSteps = 0;
 182   3                              }
 183   2                      break;
 184   2                      default:
 185   2                              _nop_();
 186   2                              receiveSteps = 0;
 187   2              }
 188   1      }
 189          
 190          void anyData()
 191          {
 192   1              WORD dat = ((uartBuffer[4]<<8) | uartBuffer[5]);
 193   1              if(uartBuffer[2] == 0x01)               //系统参数1
 194   1              {
 195   2                      sysParm1_SignalNumPerMeter = dat;
 196   2                      maxSignalNum = (65535 * sysParm1_SignalNumPerMeter)/1000-2000;
 197   2                      saveSetting = 1;
 198   2              }
 199   1              else if(uartBuffer[2] == 0x03)  //系统参数2
 200   1              {
 201   2                      sysParm2_ErrorCorrectionValue = dat;
 202   2                      saveSetting = 1;
 203   2              }
 204   1              else if(uartBuffer[2] == 0x05)  //系统参数3
 205   1              {
 206   2                      sysParm3 = dat;
 207   2              }
 208   1              else if(uartBuffer[2] == 0x07)  //系统参数4
 209   1              {
 210   2                      sysParm4 = dat;
 211   2              }
 212   1              else if(uartBuffer[2] == 0x09)  //系统参数5
 213   1              {
 214   2                      sysParm5 = dat; 
 215   2              }
 216   1              else if(uartBuffer[2] == 0x0B)  //板材参数_板长1
 217   1              {
 218   2                      parameterBoard[0].boardLength = dat;
 219   2              }
 220   1              else if(uartBuffer[2] == 0x0D)  //板材参数_块数1        
 221   1              {
 222   2                      parameterBoard[0].boardNumber = dat;
 223   2              }
 224   1              else if(uartBuffer[2] == 0x0F)  //板材参数_板长2
 225   1              {
 226   2                      parameterBoard[1].boardLength = dat;
 227   2              }
 228   1              else if(uartBuffer[2] == 0x11)  //板材参数_块数2
 229   1              {
 230   2                      parameterBoard[1].boardNumber = dat;
 231   2              }
 232   1              else if(uartBuffer[2] == 0x13)  //板材参数_板长3
 233   1              {
 234   2                      parameterBoard[2].boardLength = dat;
 235   2              }
 236   1              else if(uartBuffer[2] == 0x15)  //板材参数_块数3
 237   1              {
 238   2                      parameterBoard[2].boardNumber = dat;
 239   2              }
 240   1              else if(uartBuffer[2] == 0x17)  //板材参数_板长4
C51 COMPILER V7.50   UART                                                                  10/10/2014 20:44:24 PAGE 5   

 241   1              {
 242   2                      parameterBoard[3].boardLength = dat;
 243   2              }
 244   1              else if(uartBuffer[2] == 0x19)  //板材参数_块数4
 245   1              {
 246   2                      parameterBoard[3].boardNumber = dat;
 247   2              }
 248   1              else if(uartBuffer[2] == 0x30)  //板材参数_板材递减长度1
 249   1              {
 250   2                      parameterBoard[0].boardDecLength = dat;
 251   2              }
 252   1              else if(uartBuffer[2] == 0x32)  //板材参数_板材递减长度2
 253   1              {
 254   2                      parameterBoard[1].boardDecLength = dat;
 255   2              }
 256   1              else if(uartBuffer[2] == 0x34)  //板材参数_板材递减长度3
 257   1              {
 258   2                      parameterBoard[2].boardDecLength = dat;
 259   2              }
 260   1              else if(uartBuffer[2] == 0x36)  //板材参数_板材递减长度4
 261   1              {
 262   2                      parameterBoard[3].boardDecLength = dat;
 263   2              }
 264   1              else if(uartBuffer[2] == 0x38)  //液压剪刀状态
 265   1              {
 266   2                      if(HydClamStatus == 1)
 267   2                      {
 268   3                              HydClamStatus = 0;
 269   3                      }
 270   2                      else
 271   2                      {
 272   3                              HydClamStatus = 1;
 273   3                      }
 274   2              }
 275   1              else if(uartBuffer[2] == 0x3A)  //液压电机状态
 276   1              {
 277   2                      if(HydMonitorStatus == 1)
 278   2                      {
 279   3                              HydMonitorStatus = 0;
 280   3                              HydMonitorOut = 1;
 281   3                      }
 282   2                      else
 283   2                      {
 284   3                              HydMonitorStatus = 1;
 285   3                              HydMonitorOut = 0;
 286   3                      }
 287   2              }
 288   1              else if(uartBuffer[2] == 0x23)  //手动操作_前进
 289   1              {
 290   2                      if(powerMode == 0)
 291   2                      {
 292   3                              ManualDispatchSteps = 0;
 293   3                              manualOperation = 1;
 294   3                      }
 295   2              }
 296   1              else if(uartBuffer[2] == 0x24)  //手动操作_后退
 297   1              {
 298   2                      if(powerMode == 0)
 299   2                      {
 300   3                              ManualDispatchSteps = 2;
 301   3                              manualOperation = 2;
 302   3                      }
C51 COMPILER V7.50   UART                                                                  10/10/2014 20:44:24 PAGE 6   

 303   2              }
 304   1              else if(uartBuffer[2] == 0x25)  //手动操作_慢进
 305   1              {
 306   2                      if(powerMode == 0)
 307   2                      {
 308   3                              ManualDispatchSteps = 4;
 309   3                              manualOperation = 3;
 310   3                      }
 311   2              }
 312   1              else if(uartBuffer[2] == 0x26)  //手动操作_切断上
 313   1              {
 314   2                      if(powerMode == 0)
 315   2                      {
 316   3                              ManualDispatchSteps = 6;
 317   3                              manualOperation = 4;
 318   3                      }
 319   2              }
 320   1              else if(uartBuffer[2] == 0x27)  //手动操作_切断下
 321   1              {
 322   2                      if(powerMode == 0)
 323   2                      {
 324   3                              ManualDispatchSteps = 8;
 325   3                              manualOperation = 5;
 326   3                      }
 327   2              }
 328   1              else if(uartBuffer[2] == 0x28)  //运行画面_复位按钮
 329   1              {
 330   2                      ManiDispatchSteps = 20;
 331   2                      SubDispatchSteps = 20;
 332   2                      powerMode = 0;
 333   2                      settingBoardLength = 0;
 334   2                      settingBoardNumber = 0;
 335   2                      currentlySignalNum = 0;
 336   2                      currentlyBoardNumber = 0;
 337   2                      ManiDispatchStepsBak = 0;
 338   2                      SubDispatchStepsBak = 20;
 339   2              }
 340   1              freshDiaplay = 1;       
 341   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    956    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     19       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
